{
    "tenantId": {
        "Value": "",
        "Description": "Id of the tenant to deploy to. Can be found in the Azure Active Directory blade."
    },
    "spoTenantName": {
        "Value": "",
        "Description": "Name of the SharePoint tenant to deploy to (excluding onmicrosoft.com) e.g. contoso"
    },
    "fullTenantName": {
        "Value": "",
        "Description": "Full name of the tenant to deploy to e.g. contoso.onmicrosoft.com"
    },
    "requestsSiteName": {
        "Value": "",
        "Description": "Name of the SharePoint site to store the requests, can include spaces (URL/Alias auomatically generated). If the site exists, it will prompt to overwrite and will apply the provisioning template."
    },
    "requestsSiteDesc": {
        "Value": "",
        "Description": "Description for the site that will be created above."
    },
    "managedPath": {
        "Value": "",
        "Description": "Managed path configured in the tenant e.g. 'sites' or 'teams' (no forward slash)."
    },
    "subscriptionId": {
        "Value": "",
        "Description": "Azure subscription id to deploy the solution to. All resources in an Azure subscription are billed together."
    },
    "region": {
        "Value": "",
        "Description": "The Azure region to deploy to. The internal name should be used. Not every resource is available in every region."
    },
    "resourceGroupName": {
        "Value": "",
        "Description": "A name for a new resource group to deploy the solution to - if the resource group does not exist it will be created."
    },
    "appName": {
        "Value": "",
        "Description": "Name for the Entra ad app registration that will be created."
    },
    "createSelfSignedCert": {
        "Value": true,
        "Description": "Specifies whether a self signed certificate should be created and uploaded to the AD app and Key Vault. If set to false, the certificate must be uploaded manually to the app registration and Key Vault."
    },
    "certName": {
        "Value": "provisionassist-cert",
        "Description": "Name for the self signed certificate that will be created (if createSelfSignedCert is set to true)."
    },
    "certValidityDays": {
        "Value": 365,
        "Description": "Number of days the self signed certificate will be valid for (if createSelfSignedCert is set to true)."
    },
    "pnpAppId": {
        "Value": "",
        "Description": "Id of the PnP Entra app registration."
    },
    "pnpCertPath": {
        "Value": "",
        "Description": "Path to your PnP certificate that will be used to connect with PnP PowerShell. Please ensure to double escape the backslashes above."
    },
    "siteLogoPath": {
        "Value": "",
        "Description": "Path to a company logo which will be set as the site logo for Communication sites and no Group Team Sites when provisioned. Optional - can be left blank."
    },
    "serviceAccountUPN": {
        "Value": "",
        "Description": " UPN of Service Account to be used for the solution - used to connect to SharePoint and send Emails in the Logic App."
    },
    "isEdu": {
        "Value": false,
        "Description": "Specifies whether the current tenant is an Education tenant. If set to true, the Education Teams Templates will be deployed. These will be skipped if set to false or left blank."
    },
    "keyVaultName": {
      "Value": "",
        "Description": "Name for the Key Vault that will be provisioned to store the Azure ad app ID and secret. The Key Vault name must be unique and not exist in another subscription."
    },
    "enableSensitivity": {
        "Value": true,
        "Description": "Enable the sensitivity label functionality."
    },
    "skipApplySPOTemplate": {
        "Value": false,
        "Description": "Skip applying the PnP template to the SharePoint site."

    }
}